{"remainingRequest":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/components/dialog/dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/components/dialog/dialog.vue","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CubePopup from '../popup/popup.vue'\nimport CubeInput from '../input/input.vue'\nimport visibilityMixin from '../../common/mixins/visibility'\nimport popupMixin from '../../common/mixins/popup'\nimport localeMixin from '../../common/mixins/locale'\n\nconst COMPONENT_NAME = 'cube-dialog'\nconst EVENT_CONFIRM = 'confirm'\nconst EVENT_CANCEL = 'cancel'\nconst EVENT_CLOSE = 'close'\n\nconst defHref = 'javascript:;'\nconst defConfirmBtn = {\n  textType: 'ok',\n  active: true,\n  disabled: false,\n  href: defHref\n}\nconst defCancelBtn = {\n  textType: 'cancel',\n  active: false,\n  disabled: false,\n  href: defHref\n}\nconst parseBtn = function (btn, defBtn) {\n  if (typeof btn === 'string') {\n    btn = {\n      text: btn\n    }\n  }\n  const text = defBtn && this.$t(defBtn.textType)\n  return Object.assign({}, defBtn, { text }, btn)\n}\n\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin, popupMixin, localeMixin],\n  props: {\n    type: {\n      type: String,\n      default: 'alert'\n    },\n    prompt: {\n      type: Object,\n      default() {\n        return {\n          value: '',\n          placeholder: ''\n        }\n      }\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    },\n    showClose: {\n      type: Boolean,\n      default: false\n    },\n    confirmBtn: {\n      type: [Object, String],\n      default() {\n        return {\n          ...defConfirmBtn\n        }\n      }\n    },\n    cancelBtn: {\n      type: [Object, String],\n      default() {\n        return {\n          ...defCancelBtn\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      defHref,\n      promptValue: this.prompt.value\n    }\n  },\n  computed: {\n    _confirmBtn() {\n      return parseBtn.call(this, this.confirmBtn, defConfirmBtn)\n    },\n    _cancelBtn() {\n      return parseBtn.call(this, this.cancelBtn, defCancelBtn)\n    },\n    isConfirm() {\n      return this.type === 'confirm'\n    },\n    isPrompt() {\n      return this.type === 'prompt'\n    },\n    containerClass() {\n      return `cube-dialog-${this.type}`\n    }\n  },\n  watch: {\n    'prompt.value': {\n      handler: function (newVal) {\n        this.promptValue = newVal\n      }\n    }\n  },\n  methods: {\n    maskClick(e) {\n      this.maskClosable && this.cancel(e)\n    },\n    confirm(e) {\n      if (this._confirmBtn.disabled) {\n        return\n      }\n      this.hide()\n      this.$emit(EVENT_CONFIRM, e, this.promptValue)\n    },\n    cancel(e) {\n      if (this._cancelBtn.disabled) {\n        return\n      }\n      this.hide()\n      this.$emit(EVENT_CANCEL, e)\n    },\n    close(e) {\n      this.hide()\n      this.$emit(EVENT_CLOSE, e)\n    }\n  },\n  components: {\n    CubePopup,\n    CubeInput\n  }\n}\n",null]}