{"remainingRequest":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js??ref--29-1!/Users/wangluna/wln/vueSpace/vue-ergeng/src/store.js","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/src/store.js","mtime":1561370042469},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { stat } from \"fs\";\nVue.use(Vuex);\nvar key = 'user';\nvar isLogin = 'isLogin';\nexport default new Vuex.Store({\n  //设置属性\n  state: {\n    isLogin: '0',\n    userId: '',\n    user: '',\n    count: 0,\n    //获取token\n    token: sessionStorage.getItem('token') ? sessionStorage.getItem('token') : '',\n    userinfo: sessionStorage.getItem('userinfo') ? JSON.parse(sessionStorage.getItem('userinfo')) : ''\n  },\n  getters: {\n    getStorage: function getStorage(state) {\n      if (!state.user) {\n        state.user = JSON.parse(localStorage.getItem(key));\n        state.isLogin = localStorage.getItem(isLogin);\n      }\n\n      return state.user;\n    }\n  },\n  mutations: {\n    set_taken: function set_taken(state, value) {\n      sessionStorage('token', value);\n      state.token = value;\n    },\n    set_userinfo: function set_userinfo(state, value) {\n      sessionStorage('userinfo', value);\n      state.userinfo = value;\n    },\n    $_setStorage: function $_setStorage(state, value) {\n      state.user = value, console.log(state.user);\n      localStorage.setItem(key, JSON.stringify(value));\n    },\n    $_setLogin: function $_setLogin(state, value) {\n      state.isLogin = value;\n      localStorage.setItem(isLogin, value);\n    },\n    $_removeStorage: function $_removeStorage(state) {\n      state.user = null;\n      localStorage.removeItem(key);\n    },\n    userStatus: function userStatus(flag) {\n      state.isLogin = flag;\n    }\n  } // //获取属性的状态\n  // getters:{\n  //   //获取登录状态\n  //   isLogin: state => state.isLogin,\n  // },\n  // //设置属性状态\n  // mutations: {\n  //   userStatus(state, flag){\n  //     state.isLogin = flag\n  //   },\n  // },\n  // //应用mutations\n  // actions: {\n  //   userLogin({commit}, flag){\n  //     commit(\"userStatus\", flag)\n  //   },\n  // }\n\n});",{"version":3,"sources":["/Users/wangluna/wln/vueSpace/vue-ergeng/src/store.js"],"names":["Vue","Vuex","stat","use","key","isLogin","Store","state","userId","user","count","token","sessionStorage","getItem","userinfo","JSON","parse","getters","getStorage","localStorage","mutations","set_taken","value","set_userinfo","$_setStorage","console","log","setItem","stringify","$_setLogin","$_removeStorage","removeItem","userStatus","flag"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,QAAqB,IAArB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,IAAMG,GAAG,GAAG,MAAZ;AACA,IAAMC,OAAO,GAAG,SAAhB;AACA,eAAe,IAAIJ,IAAI,CAACK,KAAT,CAAe;AAC5B;AACAC,EAAAA,KAAK,EAAE;AACLF,IAAAA,OAAO,EAAE,GADJ;AAELG,IAAAA,MAAM,EAAC,EAFF;AAGLC,IAAAA,IAAI,EAAC,EAHA;AAILC,IAAAA,KAAK,EAAE,CAJF;AAKL;AACAC,IAAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB,IAAkCD,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAlC,GAAoE,EANtE;AAOLC,IAAAA,QAAQ,EAAEF,cAAc,CAACC,OAAf,CAAuB,UAAvB,IAAoCE,IAAI,CAACC,KAAL,CAAWJ,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAApC,GAAqF;AAP1F,GAFqB;AAW5BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,oBAAUX,KAAV,EAAiB;AAC3B,UAAI,CAACA,KAAK,CAACE,IAAX,EAAiB;AACfF,QAAAA,KAAK,CAACE,IAAN,GAAaM,IAAI,CAACC,KAAL,CAAWG,YAAY,CAACN,OAAb,CAAqBT,GAArB,CAAX,CAAb;AACAG,QAAAA,KAAK,CAACF,OAAN,GAAgBc,YAAY,CAACN,OAAb,CAAqBR,OAArB,CAAhB;AACD;;AACD,aAAOE,KAAK,CAACE,IAAb;AACD;AAPM,GAXmB;AAoB5BW,EAAAA,SAAS,EAAC;AACRC,IAAAA,SADQ,qBACEd,KADF,EACSe,KADT,EACe;AACrBV,MAAAA,cAAc,CAAC,OAAD,EAASU,KAAT,CAAd;AACAf,MAAAA,KAAK,CAACI,KAAN,GAAcW,KAAd;AACD,KAJO;AAKRC,IAAAA,YALQ,wBAKKhB,KALL,EAKYe,KALZ,EAKkB;AACxBV,MAAAA,cAAc,CAAC,UAAD,EAAaU,KAAb,CAAd;AACAf,MAAAA,KAAK,CAACO,QAAN,GAAiBQ,KAAjB;AACD,KARO;AAURE,IAAAA,YAVQ,wBAUKjB,KAVL,EAUYe,KAVZ,EAUkB;AACxBf,MAAAA,KAAK,CAACE,IAAN,GAAaa,KAAb,EACAG,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACE,IAAlB,CADA;AAEAU,MAAAA,YAAY,CAACQ,OAAb,CAAqBvB,GAArB,EAAyBW,IAAI,CAACa,SAAL,CAAeN,KAAf,CAAzB;AACD,KAdO;AAeRO,IAAAA,UAfQ,sBAeItB,KAfJ,EAeWe,KAfX,EAekB;AACxBf,MAAAA,KAAK,CAACF,OAAN,GAAgBiB,KAAhB;AACAH,MAAAA,YAAY,CAACQ,OAAb,CAAqBtB,OAArB,EAA8BiB,KAA9B;AACD,KAlBO;AAmBRQ,IAAAA,eAnBQ,2BAmBSvB,KAnBT,EAmBgB;AACtBA,MAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACAU,MAAAA,YAAY,CAACY,UAAb,CAAwB3B,GAAxB;AACD,KAtBO;AAwBR4B,IAAAA,UAxBQ,sBAwBGC,IAxBH,EAwBQ;AACd1B,MAAAA,KAAK,CAACF,OAAN,GAAgB4B,IAAhB;AACD;AA1BO,GApBkB,CAgD5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhE4B,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { stat } from \"fs\";\n\nVue.use(Vuex);\n\nconst key = 'user'\nconst isLogin = 'isLogin'\nexport default new Vuex.Store({\n  //设置属性\n  state: {\n    isLogin: '0',\n    userId:'',\n    user:'',\n    count: 0,\n    //获取token\n    token: sessionStorage.getItem('token') ? sessionStorage.getItem('token') : '',\n    userinfo: sessionStorage.getItem('userinfo')? JSON.parse(sessionStorage.getItem('userinfo')) : ''\n  },\n  getters: {\n    getStorage: function (state) {\n      if (!state.user) {\n        state.user = JSON.parse(localStorage.getItem(key))\n        state.isLogin = localStorage.getItem(isLogin)\n      }\n      return state.user\n    }\n  },\n  mutations:{\n    set_taken(state, value){\n      sessionStorage('token',value);\n      state.token = value\n    },\n    set_userinfo(state, value){\n      sessionStorage('userinfo', value);\n      state.userinfo = value\n    },\n    \n    $_setStorage(state, value){\n      state.user = value,\n      console.log(state.user)\n      localStorage.setItem(key,JSON.stringify(value));\n    },\n    $_setLogin (state, value) {\n      state.isLogin = value\n      localStorage.setItem(isLogin, value)\n    },\n    $_removeStorage (state) {\n      state.user = null\n      localStorage.removeItem(key)\n    },\n\n    userStatus(flag){\n      state.isLogin = flag;\n    }\n  }\n  // //获取属性的状态\n  // getters:{\n  //   //获取登录状态\n  //   isLogin: state => state.isLogin,\n  // },\n  // //设置属性状态\n  // mutations: {\n  //   userStatus(state, flag){\n  //     state.isLogin = flag\n  //   },\n  // },\n  // //应用mutations\n  // actions: {\n  //   userLogin({commit}, flag){\n  //     commit(\"userStatus\", flag)\n  //   },\n  // }\n});\n"]}]}