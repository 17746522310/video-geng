{"remainingRequest":"/Users/wangluna/wln/vueSpace/video-geng/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/wangluna/wln/vueSpace/video-geng/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangluna/wln/vueSpace/video-geng/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangluna/wln/vueSpace/video-geng/src/components/toast.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/video-geng/src/components/toast.vue","mtime":1561793487084},{"path":"/Users/wangluna/wln/vueSpace/video-geng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/video-geng/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/video-geng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/video-geng/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport { constants } from 'fs';\nexport default {\n  /**\n   * toast 模态接口参数\n   * @param {string} modal.content 模态框提示内容\n   * @param {function} modal.callback 模态框是否有回调方法\n   */\n  name: \"toast\",\n  data: function data() {\n    return {\n      show: false\n    };\n  },\n  props: {\n    toastOptions: Object\n  },\n  computed: {\n    tips: {\n      get: function get() {\n        var tips = this.toastOptions || {};\n        tips = {\n          content: tips.content || '操作成功',\n          callback: tips.callback || function () {},\n          time: tips.time || 1500\n        };\n        return tips;\n      }\n    }\n  },\n  methods: {\n    showTips: function showTips() {\n      var _this = this;\n\n      this.show = true;\n      setTimeout(function () {\n        // this.$emit('callback', this.tips.callback); \n        _this.show = false;\n\n        _this.tips.callback();\n      }, this.tips.time);\n    }\n  }\n};",{"version":3,"sources":["toast.vue"],"names":[],"mappings":";;;;;;AAOA,SAAA,SAAA,QAAA,IAAA;AACA,eAAA;AACA;;;;;AAKA,EAAA,IAAA,EAAA,OANA;AAOA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GAXA;AAYA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAZA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,YAAA,IAAA,GAAA,KAAA,YAAA,IAAA,EAAA;AACA,QAAA,IAAA,GAAA;AACA,UAAA,OAAA,EAAA,IAAA,CAAA,OAAA,IAAA,MADA;AAEA,UAAA,QAAA,EAAA,IAAA,CAAA,QAAA,IAAA,YAAA,CAAA,CAFA;AAGA,UAAA,IAAA,EAAA,IAAA,CAAA,IAAA,IAAA;AAHA,SAAA;AAKA,eAAA,IAAA;AACA;AATA;AADA,GAfA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,IAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,OAJA,EAIA,KAAA,IAAA,CAAA,IAJA,CAAA;AAKA;AARA;AA5BA,CAAA","sourcesContent":["<template>\n    <div class=\"toast\" v-show=\"show\">\n        {{tips.content}}\n    </div>\n</template>\n\n<script>\nimport { constants } from 'fs';\nexport default {\n/**\n * toast 模态接口参数\n * @param {string} modal.content 模态框提示内容\n * @param {function} modal.callback 模态框是否有回调方法\n */\n  name: \"toast\",\n  data: function(){\n      return {\n          show: false\n      }\n  },\n  props:{\n     toastOptions: Object,\n  },\n  computed:{\n      tips:{\n          get(){\n              let tips = this.toastOptions || {};\n              tips = {\n                  content: tips.content || '操作成功',\n                  callback: tips.callback || function(){},\n                  time: tips.time || 1500\n              };\n              return tips;\n          }\n      }\n  },\n  methods:{\n    showTips(){\n        this.show = true;\n        setTimeout(()=>{\n            // this.$emit('callback', this.tips.callback); \n            this.show = false;\n            this.tips.callback();\n        }, this.tips.time)\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n    .toast {\n        position: fixed;\n        z-index: 2000;\n        left: 50%;\n        top:45%;\n        transition:all .5s;\n     -webkit-transform: translateX(-50%) translateY(-50%);\n        -moz-transform: translateX(-50%) translateY(-50%);\n         -ms-transform: translateX(-50%) translateY(-50%);\n          -o-transform: translateX(-50%) translateY(-50%);\n             transform: translateX(-50%) translateY(-50%);\n        text-align: center;\n        border-radius: 5px;\n        color:#FFF;\n        background: rgba(17, 17, 17, 0.7);\n        height: 45px;\n        line-height: 45px;\n        padding: 0 15px;\n        max-width: 150px;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}