{"remainingRequest":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js??ref--16-2!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/components/dialog/dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/components/dialog/dialog.vue","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CubePopup from \"../popup/popup.vue\";\nimport CubeInput from \"../input/input.vue\";\nimport visibilityMixin from \"../../common/mixins/visibility\";\nimport popupMixin from \"../../common/mixins/popup\";\nimport localeMixin from \"../../common/mixins/locale\";\nvar COMPONENT_NAME = 'cube-dialog';\nvar EVENT_CONFIRM = 'confirm';\nvar EVENT_CANCEL = 'cancel';\nvar EVENT_CLOSE = 'close';\nvar defHref = 'javascript:;';\nvar defConfirmBtn = {\n  textType: 'ok',\n  active: true,\n  disabled: false,\n  href: defHref\n};\nvar defCancelBtn = {\n  textType: 'cancel',\n  active: false,\n  disabled: false,\n  href: defHref\n};\n\nvar parseBtn = function parseBtn(btn, defBtn) {\n  if (typeof btn === 'string') {\n    btn = {\n      text: btn\n    };\n  }\n\n  var text = defBtn && this.$t(defBtn.textType);\n  return Object.assign({}, defBtn, {\n    text: text\n  }, btn);\n};\n\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin, popupMixin, localeMixin],\n  props: {\n    type: {\n      type: String,\n      default: 'alert'\n    },\n    prompt: {\n      type: Object,\n      default: function _default() {\n        return {\n          value: '',\n          placeholder: ''\n        };\n      }\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    },\n    showClose: {\n      type: Boolean,\n      default: false\n    },\n    confirmBtn: {\n      type: [Object, String],\n      default: function _default() {\n        return _objectSpread({}, defConfirmBtn);\n      }\n    },\n    cancelBtn: {\n      type: [Object, String],\n      default: function _default() {\n        return _objectSpread({}, defCancelBtn);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      defHref: defHref,\n      promptValue: this.prompt.value\n    };\n  },\n  computed: {\n    _confirmBtn: function _confirmBtn() {\n      return parseBtn.call(this, this.confirmBtn, defConfirmBtn);\n    },\n    _cancelBtn: function _cancelBtn() {\n      return parseBtn.call(this, this.cancelBtn, defCancelBtn);\n    },\n    isConfirm: function isConfirm() {\n      return this.type === 'confirm';\n    },\n    isPrompt: function isPrompt() {\n      return this.type === 'prompt';\n    },\n    containerClass: function containerClass() {\n      return \"cube-dialog-\".concat(this.type);\n    }\n  },\n  watch: {\n    'prompt.value': {\n      handler: function handler(newVal) {\n        this.promptValue = newVal;\n      }\n    }\n  },\n  methods: {\n    maskClick: function maskClick(e) {\n      this.maskClosable && this.cancel(e);\n    },\n    confirm: function confirm(e) {\n      if (this._confirmBtn.disabled) {\n        return;\n      }\n\n      this.hide();\n      this.$emit(EVENT_CONFIRM, e, this.promptValue);\n    },\n    cancel: function cancel(e) {\n      if (this._cancelBtn.disabled) {\n        return;\n      }\n\n      this.hide();\n      this.$emit(EVENT_CANCEL, e);\n    },\n    close: function close(e) {\n      this.hide();\n      this.$emit(EVENT_CLOSE, e);\n    }\n  },\n  components: {\n    CubePopup: CubePopup,\n    CubeInput: CubeInput\n  }\n};",null]}