{"remainingRequest":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js??ref--29-2!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/common/locale/index.js","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/common/locale/index.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport defaultMessages from \"../../locale/lang/zh-CN\";\nimport { warn } from \"../helpers/debug\";\nimport { isUndef, isNumber } from \"../helpers/util\";\nimport { formatDate } from \"../lang/date\";\nvar proto;\nvar DEFAULT_LANG = 'zh-CN';\nvar locale = {\n  name: 'locale',\n  install: function install(Vue) {\n    if (locale.installed) return;\n    proto = Vue.prototype;\n    Vue.util.defineReactive(proto, '$cubeLang', DEFAULT_LANG);\n    proto['$cubeMessages'] = _defineProperty({}, DEFAULT_LANG, defaultMessages);\n    locale.installed = true;\n  },\n  use: function use(lang, messages) {\n    proto['$cubeLang'] = lang;\n    var cubeMessages = proto['$cubeMessages']; // if messages have never been stored in vue.prototye\n\n    if (!(lang in cubeMessages)) {\n      cubeMessages[[lang]] = messages;\n    }\n  },\n  helpers: {\n    toLocaleDateString: function toLocaleDateString(config, formatRules) {\n      /**\n       * Safari don't support formatRules like\n       * 'yyyy-MM-dd hh:mm:ss', so transfer it to 'yyyy/MM/dd hh:mm:ss'\n       */\n      var compatibleConfig = isNumber(config) ? config : config.replace(/-/g, '/');\n      var date = new Date(compatibleConfig);\n      /* istanbul ignore if */\n\n      if (isUndef(formatRules)) return date.toDateString();\n      return formatDate(date, formatRules);\n    }\n  },\n  addHelper: function addHelper(fnName, fn) {\n    // check existed helper fn\n\n    /* istanbul ignore if */\n    if (fnName in locale.helpers) {\n      warn(\"\".concat(fnName, \" has already been registered on helpers function, please change another name\"));\n      return;\n    }\n\n    locale.helpers[fnName] = fn;\n  }\n};\nexport default locale;",null]}