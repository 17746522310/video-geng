{"remainingRequest":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js??ref--29-2!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/common/lang/date.js","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/common/lang/date.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nvar DAY_TIMESTAMP = 60 * 60 * 24 * 1000;\nvar HOUR_TIMESTAMP = 60 * 60 * 1000;\nvar MINUTE_TIMESTAMP = 60 * 1000;\n\nfunction formatType(type, format, value, regExpAttributes) {\n  var regExpMap = {\n    year: '(Y+)',\n    month: '(M+)',\n    date: '(D+)',\n    hour: '(h+)',\n    minute: '(m+)',\n    second: '(s+)',\n    quarter: '(q+)',\n    millisecond: '(S)'\n  };\n\n  if (new RegExp(regExpMap[type], regExpAttributes).test(format)) {\n    var replaceStr = type === 'year' ? value.toString().substr(4 - RegExp.$1.length) : RegExp.$1.length === 1 ? value : pad(value);\n    format = format.replace(RegExp.$1, replaceStr);\n  }\n\n  return format;\n}\n\nfunction pad(value) {\n  return ('00' + value).substr(('' + value).length);\n}\n\nfunction formatDate(date, format) {\n  var map = {\n    year: {\n      value: date.getFullYear(),\n      regExpAttributes: 'i'\n    },\n    month: {\n      value: date.getMonth() + 1\n    },\n    date: {\n      value: date.getDate(),\n      regExpAttributes: 'i'\n    },\n    hour: {\n      value: date.getHours(),\n      regExpAttributes: 'i'\n    },\n    minute: {\n      value: date.getMinutes()\n    },\n    second: {\n      value: date.getSeconds()\n    },\n    quarter: {\n      value: Math.floor((date.getMonth() + 3) / 3),\n      regExpAttributes: 'i'\n    },\n    millisecond: {\n      value: date.getMilliseconds()\n    }\n  };\n\n  for (var key in map) {\n    format = formatType(key, format, map[key].value, map[key].regExpAttributes);\n  }\n\n  return format;\n}\n\nfunction getZeroStamp(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  return +new Date(year + '/' + month + '/' + day + ' 00:00:00');\n}\n\nfunction getDayDiff(date1, date2) {\n  return Math.floor((getZeroStamp(date1) - getZeroStamp(date2)) / DAY_TIMESTAMP);\n}\n\nfunction getNow() {\n  return window.performance && window.performance.now ? window.performance.now() + window.performance.timing.navigationStart : +new Date();\n}\n\nfunction computeNatureMaxDay(month, year) {\n  var natureMaxDay = 30;\n\n  if ([1, 3, 5, 7, 8, 10, 12].indexOf(month) > -1) {\n    natureMaxDay = 31;\n  } else {\n    if (month === 2) {\n      natureMaxDay = !year || !(year % 400) || !(year % 4) && year % 100 ? 29 : 28;\n    }\n  }\n\n  return natureMaxDay;\n}\n\nexport { DAY_TIMESTAMP, HOUR_TIMESTAMP, MINUTE_TIMESTAMP, pad, formatType, formatDate, getZeroStamp, getDayDiff, getNow, computeNatureMaxDay };",null]}