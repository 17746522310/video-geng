{"remainingRequest":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js??ref--29-2!/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/common/mixins/visibility.js","dependencies":[{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cube-ui/src/common/mixins/visibility.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangluna/wln/vueSpace/vue-ergeng/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var EVENT_TOGGLE = 'toggle';\nexport default {\n  model: {\n    prop: 'visible',\n    event: EVENT_TOGGLE\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // If use the prop visible directly, the toggle will failed when user haven't set v-model as a reactive property.\n      // So we use the data isVisible instead.\n      isVisible: false\n    };\n  },\n  watch: {\n    isVisible: function isVisible(newVal) {\n      this.$emit(EVENT_TOGGLE, newVal);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$watch('visible', function (newVal, oldVal) {\n      if (newVal) {\n        _this.show();\n      } else if (oldVal && !_this._createAPI_reuse) {\n        _this.hide();\n      }\n    }, {\n      immediate: true\n    });\n  },\n  methods: {\n    show: function show() {\n      this.isVisible = true;\n    },\n    hide: function hide() {\n      this.isVisible = false;\n    }\n  }\n};",null]}